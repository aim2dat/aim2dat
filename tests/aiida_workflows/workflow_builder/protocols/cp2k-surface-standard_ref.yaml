%YAML 1.2
---
protocol:
  title: cp2k-surface-standard
  version: '1.0'
  description: Standard settings to calculate surface properties.
  dependencies:
  - [aiida-core, '1.6', null]
  - [seekpath, '2.0', null]
  parent_node_type: aim2dat.surface
  parent_node_input: {surface_opt: structural_p.surface}
  tasks:
    surface_opt:
      process: aim2dat.cp2k.combined.surface_opt
      blacklist_inputs: [custom_scf_method]
    band_structure:
      process: aim2dat.cp2k.band_structure
      blacklist_inputs: [custom_scf_method]
      dependencies:
        surface_opt:
        - [cp2k.output_structure, structural_p.structure]
        - [cp2k.remote_folder, cp2k.parent_calc_folder]
        - [scf_parameters, structural_p.scf_parameters]
        - [path_parameters, path_parameters]
    pdos:
      process: aim2dat.cp2k.pdos
      blacklist_inputs: [custom_scf_method]
      dependencies:
        surface_opt:
        - [cp2k.output_structure, structural_p.structure]
        - [scf_parameters, structural_p.scf_parameters]
    partial_charges:
      process: aim2dat.cp2k.partial_charges
      blacklist_inputs: [custom_scf_method]
      dependencies:
        surface_opt:
        - [cp2k.output_structure, structural_p.structure]
        - [cp2k.remote_folder, cp2k.parent_calc_folder]
        - [scf_parameters, structural_p.scf_parameters]
    el_density_fields:
      process: aim2dat.cp2k.planar_fields
      blacklist_inputs: [custom_scf_method]
      dependencies:
        surface_opt:
        - [cp2k.output_structure, structural_p.structure]
        - [cp2k.remote_folder, cp2k.parent_calc_folder]
        - [scf_parameters, structural_p.scf_parameters]
    cube:
      process: aim2dat.cp2k.cube
      blacklist_inputs: [custom_scf_method]
      dependencies:
        surface_opt:
        - [cp2k.output_structure, structural_p.structure]
        - [cp2k.remote_folder, cp2k.parent_calc_folder]
        - [scf_parameters, structural_p.scf_parameters]
  general_input:
    cp2k.parameters:
      value:
        GLOBAL: &id001 {PRINT_LEVEL: MEDIUM, PREFERRED_DIAG_LIBRARY: SCALAPACK, EXTENDED_FFT_LENGTHS: true}
        FORCE_EVAL: &id002
          METHOD: Quickstep
          DFT:
            MGRID: {}
            POISSON: {PERIODIC: XY, POISSON_SOLVER: MT}
            BASIS_SET_FILE_NAME: [BASIS_MOLOPT_UCL, BASIS_MOLOPT]
            POTENTIAL_FILE_NAME: GTH_POTENTIALS
            QS: {EXTRAPOLATION: USE_GUESS, EPS_DEFAULT: 1e-14}
            SCF: {EPS_SCF: 5e-07}
            KPOINTS: {EPS_GEO: 1e-08, FULL_GRID: false, SYMMETRY: false}
            XC: {}
          SUBSYS:
            CELL: {PERIODIC: XY}
      aiida_node: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    numerical_p.kpoints_ref_dist:
      value: 0.15
      aiida_node: true
      tasks: [surface_opt, band_structure, partial_charges, el_density_fields, cube]
    factor_unocc_states:
      value: 0.75
      aiida_node: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    enable_roks:
      value: false
      aiida_node: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    scf_method:
      value: surface_mixing
      aiida_node: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    adjust_scf_parameters:
      value: true
      aiida_node: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    always_add_unocc_states:
      value: true
      aiida_node: true
      tasks: [surface_opt, partial_charges, el_density_fields, cube]
    max_iterations:
      value: 100
      aiida_node: true
      compare: False
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    preopt_optimization_p.max_force:
      value: 0.005
      aiida_node: true
      tasks: [surface_opt]
    preopt_optimization_p.rms_force:
      value: 0.005
      aiida_node: true
      tasks: [surface_opt]
    preopt_optimization_p.max_dr:
      value: 0.02
      aiida_node: true
      tasks: [surface_opt]
    preopt_optimization_p.rms_dr:
      value: 0.01
      aiida_node: true
      tasks: [surface_opt]
    optimization_p.max_force:
      value: 0.00019
      aiida_node: true
      tasks: [surface_opt]
    optimization_p.rms_force:
      value: 0.00019
      aiida_node: true
      tasks: [surface_opt]
    optimization_p.max_dr:
      value: 0.002
      aiida_node: true
      tasks: [surface_opt]
    optimization_p.rms_dr:
      value: 0.001
      aiida_node: true
      tasks: [surface_opt]
    structural_p.vacuum:
      value: 0.0
      aiida_node: true
      tasks: [surface_opt]
    structural_p.vacuum_factor:
      value: 1.1
      aiida_node: true
      tasks: [surface_opt]
    structural_p.periodic:
      value: false
      aiida_node: true
      tasks: [surface_opt]
    structural_p.minimum_slab_size:
      value: 20.0
      aiida_node: true
      tasks: [surface_opt]
    structural_p.maximum_slab_size:
      value: 50.0
      aiida_node: true
      tasks: [surface_opt]
    slab_conv.criteria:
      value: surface_energy
      aiida_node: true
      tasks: [surface_opt]
    slab_conv.threshold:
      value: 0.0005
      aiida_node: true
      tasks: [surface_opt]
    resolve_atoms->pdos:
      value: true
      aiida_node: true
    minimum_cell_length->pdos:
      value: 25.0
      aiida_node: true
    maximum_cell_length->pdos:
      value: 50.0
      aiida_node: true
    critic2.parameters->partial_charges:
      value:
      - crystal aiida-ELECTRON_DENSITY-1_0.cube
      - load aiida-ELECTRON_DENSITY-1_0.cube core zpsp
      - load aiida-ELECTRON_DENSITY-1_0.cube
      - integrable 2
      - yt
      dependency: critic2.code
      aiida_node: true
    chargemol.parameters->partial_charges:
      value: {'periodicity along A, B, and C vectors': [true, true, true], charge type: DDEC6}
      dependency: chargemol.code
      aiida_node: true
    store_cubes->partial_charges:
      value: false
      aiida_node: true
    field_types->el_density_fields:
      value: ["deformation_density", "elf", "total_density"]
      aiida_node: true
    store_cubes->el_density_fields:
      value: false
      aiida_node: true
  user_input:
    bulk_reference:
      validation: aim2dat.cp2k.combined.surface_opt
      namespace: true
      compare: false
      tasks: [surface_opt]
    scf_extended_system:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    numerical_p.xc_functional:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    numerical_p.cutoff_values:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    numerical_p.basis_sets:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: true
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    numerical_p.pseudo_file:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      optional: true
      compare: false
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    numerical_p.basis_file:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      optional: true
      compare: false
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    preopt_numerical_p.cutoff_values:
      validation: aim2dat.cp2k.combined.surface_opt
      aiida_node: true
      compare: false
      tasks: [surface_opt]
    preopt_numerical_p.basis_sets:
      validation: aim2dat.cp2k.combined.surface_opt
      aiida_node: true
      compare: false
      tasks: [surface_opt]
    preopt_numerical_p.basis_file:
      validation: aim2dat.cp2k.combined.surface_opt
      aiida_node: true
      optional: true
      compare: false
      tasks: [surface_opt]
    wfn_n_homo->pdos: {validation: aim2dat.cp2k.pdos, aiida_node: true, compare: false,
      optional: true}
    wfn_n_lumo->pdos: {validation: aim2dat.cp2k.pdos, aiida_node: true, compare: false,
      optional: true}
    wfn_cube_list->pdos: {validation: aim2dat.cp2k.pdos, aiida_node: true, compare: false,
      optional: true}
    plane_vectors->el_density_fields: {validation: aim2dat.cp2k.planar_fields,
      aiida_node: true, compare: false, optional: true}
    cube_types->cube: {validation: aim2dat.cp2k.cube, aiida_node: true, compare: true,
      optional: true}
    cp2k.code:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: false
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    cp2k.metadata:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: false
      unstored: true
      optional: true
      compare: false
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
    critic2.code:
      validation: aim2dat.cp2k.partial_charges
      aiida_node: true
      optional: true
      compare: false
      tasks: [partial_charges, el_density_fields]
    critic2.metadata:
      validation: aim2dat.cp2k.partial_charges
      aiida_node: false
      unstored: true
      optional: true
      compare: false
      tasks: [partial_charges, el_density_fields]
    chargemol.code:
      validation: aim2dat.cp2k.partial_charges
      aiida_node: true
      optional: true
      tasks: [partial_charges]
    chargemol.metadata:
      validation: aim2dat.cp2k.partial_charges
      aiida_node: false
      unstored: true
      optional: true
      compare: false
      tasks: [partial_charges]
    chargemol.path_atomic_densities:
      validation: aim2dat.cp2k.partial_charges
      aiida_node: true
      dependency: chargemol.code
      compare: false
      tasks: [partial_charges]
    clean_workdir:
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      optional: true
      compare: false
      tasks: [surface_opt, band_structure, pdos, partial_charges, el_density_fields, cube]
  results:
    primitive_structure: {task: surface_opt, output_port: primitive_slab}
    scf_method_level:
      task: surface_opt
      output_port: scf_parameters
      retrieve_value: [method_level]
    scf_parameter_level:
      task: surface_opt
      output_port: scf_parameters
      retrieve_value: [parameter_level]
    scf_smearing_level:
      task: surface_opt
      output_port: scf_parameters
      retrieve_value: [smearing_level]
    optimized_structure: {task: surface_opt, output_port: cp2k.output_structure}
    total_energy:
      task: surface_opt
      output_port: cp2k.output_parameters
      retrieve_value: [energy]
      unit: Hartree
    band_structure: {task: band_structure, output_port: cp2k.output_bands}
    pdos: {task: pdos, output_port: cp2k.output_pdos}
    e_fermi:
      task: pdos
      output_port: cp2k.output_parameters
      retrieve_value: [e_fermi]
      unit: eV
    bader_populations: {task: partial_charges, output_port: critic2.output_bader_populations}
    ddec6_populations: {task: partial_charges, output_port: chargemol.output_ddec6_populations}
    hirshfeld_populations: {task: partial_charges, output_port: cp2k.output_hirshfeld_populations}
    mulliken_populations: {task: partial_charges, output_port: cp2k.output_mulliken_populations}
    elf: {task: el_density_fields, output_port: critic2.elf.output_planes.elf}
    def_density: {task: el_density_fields, output_port: critic2.deformation_density.output_planes.rhodef}
    electron_density: {task: cube, output_port: cp2k.output_cubes.e_density}
    total_density: {task: cube, output_port: cp2k.output_cubes.tot_density}
    electrostatic_potential: {task: cube, output_port: cp2k.output_cubes.v_hartree}
user_input:
  bulk_reference: {validation: aim2dat.cp2k.combined.surface_opt, namespace: true,
    compare: false, aiida_node: false, value: null, unstored: false, optional: false}
  scf_extended_system: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    compare: true, namespace: false, value: null, unstored: false, optional: false}
  numerical_p.xc_functional: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    compare: true, namespace: false, value: null, unstored: false, optional: false}
  numerical_p.cutoff_values: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    compare: true, namespace: false, value: null, unstored: false, optional: false}
  numerical_p.basis_sets: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    compare: true, namespace: false, value: null, unstored: false, optional: false}
  numerical_p.pseudo_file: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    optional: true, compare: false, namespace: false, value: null, unstored: false}
  numerical_p.basis_file: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    optional: true, compare: false, namespace: false, value: null, unstored: false}
  preopt_numerical_p.cutoff_values: {validation: aim2dat.cp2k.combined.surface_opt,
    aiida_node: true, compare: false, namespace: false, value: null, unstored: false,
    optional: false}
  preopt_numerical_p.basis_sets: {validation: aim2dat.cp2k.combined.surface_opt,
    aiida_node: true, compare: false, namespace: false, value: null, unstored: false,
    optional: false}
  preopt_numerical_p.basis_file: {validation: aim2dat.cp2k.combined.surface_opt,
    aiida_node: true, optional: true, compare: false, namespace: false, value: null,
    unstored: false}
  cp2k.code: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true, compare: false,
    namespace: false, value: null, unstored: false, optional: false}
  cp2k.metadata: {validation: aim2dat.cp2k.find_scf_p, aiida_node: false, unstored: true,
    optional: true, compare: false, namespace: false, value: null}
  critic2.code: {validation: aim2dat.cp2k.partial_charges, aiida_node: true,
    optional: true, compare: false, namespace: false, value: null, unstored: false}
  critic2.metadata: {validation: aim2dat.cp2k.partial_charges, aiida_node: false,
    unstored: true, optional: true, compare: false, namespace: false, value: null}
  chargemol.code: {validation: aim2dat.cp2k.partial_charges, aiida_node: true,
    optional: true, namespace: false, value: null, unstored: false, compare: true}
  chargemol.metadata: {validation: aim2dat.cp2k.partial_charges, aiida_node: false,
    unstored: true, optional: true, compare: false, namespace: false, value: null}
  chargemol.path_atomic_densities: {validation: aim2dat.cp2k.partial_charges,
    aiida_node: true, dependency: chargemol.code, compare: false, namespace: false,
    value: null, unstored: false, optional: false}
  clean_workdir: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true, optional: true,
    compare: false, namespace: false, value: null, unstored: false}
general_input:
  cp2k.parameters:
    value:
      GLOBAL: *id001
      FORCE_EVAL: *id002
    aiida_node: true
    namespace: false
    unstored: false
    compare: true
    optional: false
  numerical_p.kpoints_ref_dist: {value: 0.15, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  factor_unocc_states: {value: 0.75, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  enable_roks: {value: false, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  scf_method: {value: surface_mixing, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  adjust_scf_parameters: {value: true, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  always_add_unocc_states: {value: true, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  max_iterations: {value: 100, aiida_node: true, compare: false, namespace: false,
    unstored: false, optional: false}
  preopt_optimization_p.max_force: {value: 0.005, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  preopt_optimization_p.rms_force: {value: 0.005, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  preopt_optimization_p.max_dr: {value: 0.02, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  preopt_optimization_p.rms_dr: {value: 0.01, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  optimization_p.max_force: {value: 0.00019, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  optimization_p.rms_force: {value: 0.00019, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  optimization_p.max_dr: {value: 0.002, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  optimization_p.rms_dr: {value: 0.001, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  structural_p.vacuum: {value: 0.0, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  structural_p.vacuum_factor: {value: 1.1, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  structural_p.periodic: {value: false, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  structural_p.minimum_slab_size: {value: 20.0, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  structural_p.maximum_slab_size: {value: 50.0, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  slab_conv.criteria: {value: surface_energy, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  slab_conv.threshold: {value: 0.0005, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
Individual_input:
  surface_opt: {}
  band_structure: {}
  pdos:
    wfn_n_homo: {validation: aim2dat.cp2k.pdos, aiida_node: true, compare: false,
      optional: true, namespace: false, value: null, unstored: false, user_input: true}
    wfn_n_lumo: {validation: aim2dat.cp2k.pdos, aiida_node: true, compare: false,
      optional: true, namespace: false, value: null, unstored: false, user_input: true}
    wfn_cube_list: {validation: aim2dat.cp2k.pdos, aiida_node: true, compare: false,
      optional: true, namespace: false, value: null, unstored: false, user_input: true}
    resolve_atoms: {value: true, aiida_node: true, namespace: false, unstored: false,
      compare: true, optional: false, user_input: false}
    minimum_cell_length: {value: 25.0, aiida_node: true, namespace: false, unstored: false,
      compare: true, optional: false, user_input: false}
    maximum_cell_length: {value: 50.0, aiida_node: true, namespace: false, unstored: false,
      compare: true, optional: false, user_input: false}
  partial_charges:
    critic2.parameters:
      value: [crystal aiida-ELECTRON_DENSITY-1_0.cube, load aiida-ELECTRON_DENSITY-1_0.cube
          core zpsp, load aiida-ELECTRON_DENSITY-1_0.cube, integrable 2, yt]
      dependency: critic2.code
      aiida_node: true
      namespace: false
      unstored: false
      compare: true
      optional: false
      user_input: false
    chargemol.parameters:
      value: {'periodicity along A, B, and C vectors': [true, true, true], charge type: DDEC6}
      dependency: chargemol.code
      aiida_node: true
      namespace: false
      unstored: false
      compare: true
      optional: false
      user_input: false
    store_cubes:
      value: false
      aiida_node: true
      namespace: false
      unstored: false
      compare: true
      optional: false
      user_input: false
  el_density_fields:
    plane_vectors: {validation: aim2dat.cp2k.planar_fields, aiida_node: true,
      compare: false, optional: true, namespace: false, value: null, unstored: false,
      user_input: true}
    field_types:
      value: [deformation_density, elf, total_density]
      aiida_node: true
      namespace: false
      unstored: false
      compare: true
      optional: false
      user_input: false
    store_cubes: {value: false, aiida_node: true, namespace: false, unstored: false,
      compare: true, optional: false, user_input: false}
  cube:
    cube_types:
      aiida_node: True
      compare: True
      namespace: False
      optional: True
      user_input: True
      validation: aim2dat.cp2k.cube
      value:
      unstored: False
tasks:
  surface_opt:
    process: aim2dat.cp2k.combined.surface_opt
    parent_node: structural_p.surface
    inputs: [bulk_reference, scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values,
      numerical_p.basis_sets, numerical_p.pseudo_file, numerical_p.basis_file, preopt_numerical_p.cutoff_values, 
      preopt_numerical_p.basis_sets, preopt_numerical_p.basis_file, cp2k.code, cp2k.metadata, clean_workdir,
      cp2k.parameters, numerical_p.kpoints_ref_dist, factor_unocc_states, enable_roks, scf_method,
      adjust_scf_parameters, always_add_unocc_states, max_iterations, preopt_optimization_p.max_force,
      preopt_optimization_p.rms_force, preopt_optimization_p.max_dr, preopt_optimization_p.rms_dr,
      optimization_p.max_force, optimization_p.rms_force, optimization_p.max_dr, optimization_p.rms_dr, 
      structural_p.vacuum, structural_p.vacuum_factor, structural_p.periodic, structural_p.minimum_slab_size, 
      structural_p.maximum_slab_size, slab_conv.criteria, slab_conv.threshold]
    dependencies: {}
    blacklist_inputs: [custom_scf_method]
  band_structure:
    process: aim2dat.cp2k.band_structure
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, numerical_p.basis_sets, 
      numerical_p.pseudo_file, numerical_p.basis_file, cp2k.code, cp2k.metadata, clean_workdir, cp2k.parameters,
      numerical_p.kpoints_ref_dist, factor_unocc_states, enable_roks, scf_method, adjust_scf_parameters, 
      max_iterations]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      surface_opt:
      - [cp2k.output_structure, structural_p.structure]
      - [cp2k.remote_folder, cp2k.parent_calc_folder]
      - [scf_parameters, structural_p.scf_parameters]
      - [path_parameters, path_parameters]
  pdos:
    process: aim2dat.cp2k.pdos
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, numerical_p.basis_sets,
      numerical_p.pseudo_file, numerical_p.basis_file, wfn_n_homo, wfn_n_lumo, wfn_cube_list, cp2k.code, 
      cp2k.metadata, clean_workdir, cp2k.parameters, factor_unocc_states, enable_roks, scf_method,
      adjust_scf_parameters, max_iterations, resolve_atoms, minimum_cell_length, maximum_cell_length]
    dependencies:
      surface_opt:
      - [cp2k.output_structure, structural_p.structure]
      - [scf_parameters, structural_p.scf_parameters]
    blacklist_inputs: [custom_scf_method]
  partial_charges:
    process: aim2dat.cp2k.partial_charges
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, numerical_p.basis_sets,
      numerical_p.pseudo_file, numerical_p.basis_file, cp2k.code, cp2k.metadata, critic2.code, critic2.metadata, 
      chargemol.code, chargemol.metadata, chargemol.path_atomic_densities, clean_workdir, cp2k.parameters, 
      numerical_p.kpoints_ref_dist, factor_unocc_states, enable_roks, scf_method, adjust_scf_parameters, 
      always_add_unocc_states, max_iterations, critic2.parameters, chargemol.parameters, store_cubes]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      surface_opt:
      - [cp2k.output_structure, structural_p.structure]
      - [cp2k.remote_folder, cp2k.parent_calc_folder]
      - [scf_parameters, structural_p.scf_parameters]
  el_density_fields:
    process: aim2dat.cp2k.planar_fields
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, numerical_p.basis_sets,
      numerical_p.pseudo_file, numerical_p.basis_file, plane_vectors, cp2k.code, cp2k.metadata, critic2.code, 
      critic2.metadata, clean_workdir, cp2k.parameters, numerical_p.kpoints_ref_dist, factor_unocc_states, 
      enable_roks, scf_method, adjust_scf_parameters, always_add_unocc_states, max_iterations, field_types, 
      store_cubes]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      surface_opt:
      - [cp2k.output_structure, structural_p.structure]
      - [cp2k.remote_folder, cp2k.parent_calc_folder]
      - [scf_parameters, structural_p.scf_parameters]
  cube:
    process: aim2dat.cp2k.cube
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, numerical_p.basis_sets,
      numerical_p.pseudo_file, numerical_p.basis_file, cube_types, cp2k.code, cp2k.metadata, clean_workdir,
      cp2k.parameters, numerical_p.kpoints_ref_dist, factor_unocc_states, enable_roks, scf_method,
      adjust_scf_parameters, always_add_unocc_states, max_iterations]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      surface_opt:
      - [cp2k.output_structure, structural_p.structure]
      - [cp2k.remote_folder, cp2k.parent_calc_folder]
      - [scf_parameters, structural_p.scf_parameters]
result_dict:
  surface_opt: [primitive_structure, scf_method_level, scf_parameter_level, scf_smearing_level, optimized_structure, total_energy]
  band_structure: [band_structure]
  pdos: [e_fermi, pdos]
  partial_charges: [bader_populations, ddec6_populations, hirshfeld_populations, mulliken_populations]
  el_density_fields: [elf, def_density]
  cube: [electron_density, total_density, electrostatic_potential]