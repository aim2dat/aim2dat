%YAML 1.2
---
protocol:
  title: cp2k-crystal-standard
  version: '3.2'
  description: Standard settings to optimize the unit cell and calculate different
    electronic properties.
  dependencies:
  - [aiida-core, '1.6', null]
  - [seekpath, '2.0', null]
  parent_node_type: structure
  parent_node_input: {seekpath_analysis: structure}
  tasks:
    seekpath_analysis:
      process: aim2dat.seekpath.structure_analysis
    find_scf_parameters:
      process: aim2dat.cp2k.find_scf_p
      blacklist_inputs: [custom_scf_method]
      dependencies:
        seekpath_analysis:
        - [primitive_structure, structural_p.structure]
    unit_cell_preopt:
      process: aim2dat.cp2k.cell_opt
      blacklist_inputs: [custom_scf_method, optimization_p.keep_angles, optimization_p.keep_symmetry]
      dependencies:
        seekpath_analysis:
        - [primitive_structure, structural_p.structure]
        find_scf_parameters:
        - [scf_parameters, structural_p.scf_parameters]
    unit_cell_opt:
      process: aim2dat.cp2k.cell_opt
      blacklist_inputs: [custom_scf_method, optimization_p.keep_angles, optimization_p.keep_symmetry]
      dependencies:
        unit_cell_preopt:
        - [cp2k.output_structure, structural_p.structure]
        - [scf_parameters, structural_p.scf_parameters]
    band_structure:
      process: aim2dat.cp2k.band_structure
      blacklist_inputs: [custom_scf_method]
      dependencies:
        seekpath_analysis:
        - [parameters, path_parameters]
        unit_cell_opt:
        - [cp2k.output_structure, structural_p.structure]
        - [cp2k.remote_folder, cp2k.parent_calc_folder]
        - [scf_parameters, structural_p.scf_parameters]
    eigenvalues:
      process: aim2dat.cp2k.eigenvalues
      blacklist_inputs: [custom_scf_method]
      dependencies:
        unit_cell_opt:
        - [cp2k.output_structure, structural_p.structure]
        - [cp2k.remote_folder, cp2k.parent_calc_folder]
        - [scf_parameters, structural_p.scf_parameters]
    pdos:
      process: aim2dat.cp2k.pdos
      blacklist_inputs: [custom_scf_method]
      dependencies:
        unit_cell_opt:
        - [cp2k.output_structure, structural_p.structure]
    partial_charges:
      process: aim2dat.cp2k.partial_charges
      blacklist_inputs: [custom_scf_method]
      dependencies:
        unit_cell_opt:
        - [cp2k.output_structure, structural_p.structure]
        - [cp2k.remote_folder, cp2k.parent_calc_folder]
        - [scf_parameters, structural_p.scf_parameters]
  general_input:
    cp2k.parameters:
      value:
        GLOBAL: &id001 {PRINT_LEVEL: MEDIUM, PREFERRED_DIAG_LIBRARY: SCALAPACK, EXTENDED_FFT_LENGTHS: true}
        FORCE_EVAL: &id002
          METHOD: Quickstep
          STRESS_TENSOR: ANALYTICAL
          DFT:
            MGRID: {}
            POISSON: {PERIODIC: XYZ, POISSON_SOLVER: PERIODIC}
            BASIS_SET_FILE_NAME: [BASIS_MOLOPT_UCL, BASIS_MOLOPT]
            POTENTIAL_FILE_NAME: GTH_POTENTIALS
            QS: {EXTRAPOLATION: USE_GUESS, EPS_DEFAULT: 1e-14}
            SCF: {EPS_SCF: 5e-07}
            KPOINTS: {EPS_GEO: 1e-08, FULL_GRID: false, SYMMETRY: false}
            XC: {}
          SUBSYS:
            CELL: {PERIODIC: XYZ}
      aiida_node: true
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    numerical_p.kpoints_ref_dist: 
      value: 0.15
      aiida_node: true
      tasks: [find_scf_parameters, unit_cell_opt, band_structure, partial_charges]
    factor_unocc_states: 
      value: 0.75
      aiida_node: true
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    enable_roks: 
      value: false
      aiida_node: true
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    scf_method: 
      value: density_mixing
      aiida_node: true
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, partial_charges]
    adjust_scf_parameters: 
      value: true
      aiida_node: true
      tasks: [unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    always_add_unocc_states: 
      value: true
      aiida_node: true
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, partial_charges]
    max_iterations: 
      value: 100
      aiida_node: true
      compare: false
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    optimization_p.keep_space_group: {value: true, aiida_node: true, tasks: [unit_cell_preopt, unit_cell_opt]}
    optimization_p.eps_symmetry: {value: 0.005, aiida_node: true, tasks: [unit_cell_preopt, unit_cell_opt]}
    optimization_p.ref_cell_scaling_factor: {value: 1.5, aiida_node: true, tasks: [unit_cell_preopt, unit_cell_opt]}
    parameters->seekpath_analysis:
      value: {reference_distance: 0.015, symprec: 0.005}
      aiida_node: true
    optimization_p.max_force->unit_cell_preopt: {value: 0.005, aiida_node: true}
    optimization_p.pressure_tolerance->unit_cell_preopt: {value: 200.0, aiida_node: true}
    numerical_p.kpoints_ref_dist->unit_cell_preopt: {value: 0.25, aiida_node: true}
    optimization_p.max_force->unit_cell_opt: {value: 9.7e-05, aiida_node: true}
    optimization_p.pressure_tolerance->unit_cell_opt: {value: 100.0, aiida_node: true}
    numerical_p.kpoints_ref_dist->eigenvalues: {value: 0.075, aiida_node: true}
    scf_method->pdos: {value: super_cell, aiida_node: true}
    minimum_cell_length->pdos: {value: 25.0, aiida_node: true}
    maximum_cell_length->pdos: {value: 40.0, aiida_node: true}
    resolve_atoms->pdos: {value: true, aiida_node: true}
    critic2.parameters->partial_charges:
      value: [crystal aiida-ELECTRON_DENSITY-1_0.cube, load aiida-ELECTRON_DENSITY-1_0.cube
          core zpsp, load aiida-ELECTRON_DENSITY-1_0.cube, integrable 2, yt]
      dependency: critic2.code
      aiida_node: true
    chargemol.parameters->partial_charges:
      value:
        'periodicity along A, B, and C vectors': &id003 [true, true, true]
        charge type: DDEC6
      dependency: chargemol.code
      aiida_node: true
  user_input:
    scf_extended_system: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: true
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    numerical_p.xc_functional: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: true
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    numerical_p.cutoff_values: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: true
      tasks: [find_scf_parameters, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    numerical_p.basis_sets: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: true
      tasks: [find_scf_parameters, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    numerical_p.pseudo_file: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      optional: true
      compare: false
      tasks: [find_scf_parameters, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    numerical_p.basis_file: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      optional: true
      compare: false
      tasks: [find_scf_parameters, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    numerical_p.cutoff_values->unit_cell_preopt: {validation: aim2dat.cp2k.find_scf_p,
      aiida_node: true, compare: false}
    numerical_p.basis_sets->unit_cell_preopt: {validation: aim2dat.cp2k.find_scf_p,
      aiida_node: true, compare: false}
    numerical_p.pseudo_file->unit_cell_preopt: {validation: aim2dat.cp2k.find_scf_p,
      aiida_node: true, optional: true, compare: false}
    numerical_p.basis_file->unit_cell_preopt: {validation: aim2dat.cp2k.find_scf_p,
      aiida_node: true, optional: true, compare: false}
    cp2k.code: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      compare: false
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    cp2k.metadata: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: false
      unstored: true
      optional: true
      compare: false
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
    critic2.code: {validation: aim2dat.cp2k.partial_charges, aiida_node: true,
      optional: true, compare: false, tasks: [partial_charges]}
    critic2.metadata: {validation: aim2dat.cp2k.partial_charges, aiida_node: false,
      unstored: true, optional: true, compare: false, tasks: [partial_charges]}
    chargemol.code: {validation: aim2dat.cp2k.partial_charges, aiida_node: true,
      optional: true, tasks: [partial_charges]}
    chargemol.metadata: {validation: aim2dat.cp2k.partial_charges, aiida_node: false,
      unstored: true, optional: true, compare: false, tasks: [partial_charges]}
    chargemol.path_atomic_densities: {validation: aim2dat.cp2k.partial_charges,
      aiida_node: true, dependency: chargemol.code, compare: false, tasks: [partial_charges]}
    clean_workdir: 
      validation: aim2dat.cp2k.find_scf_p
      aiida_node: true
      optional: true
      compare: false
      tasks: [find_scf_parameters, unit_cell_preopt, unit_cell_opt, band_structure, eigenvalues, pdos, partial_charges]
  results:
    primitive_structure: {task: seekpath_analysis, output_port: primitive_structure}
    conventional_structure: {task: seekpath_analysis, output_port: conv_structure}
    scf_method_level:
      task: find_scf_parameters
      output_port: scf_parameters
      retrieve_value: [method_level]
    scf_parameter_level:
      task: find_scf_parameters
      output_port: scf_parameters
      retrieve_value: [parameter_level]
    scf_smearing_level:
      task: find_scf_parameters
      output_port: scf_parameters
      retrieve_value: [smearing_level]
    optimized_structure: {task: unit_cell_opt, output_port: cp2k.output_structure}
    total_energy:
      task: unit_cell_opt
      output_port: cp2k.output_parameters
      retrieve_value: [energy]
      unit: Hartree
    space_group:
      task: unit_cell_opt
      output_port: cp2k.output_parameters
      retrieve_value: [spgr_info, sg_number]
    band_structure: {task: band_structure, output_port: cp2k.output_bands}
    pdos: {task: pdos, output_port: cp2k.output_pdos}
    bader_populations: {task: partial_charges, output_port: critic2.output_bader_populations}
    ddec6_populations: {task: partial_charges, output_port: chargemol.output_ddec6_populations}
    hirshfeld_populations: {task: partial_charges, output_port: cp2k.output_hirshfeld_populations}
    mulliken_populations: {task: partial_charges, output_port: cp2k.output_mulliken_populations}
user_input:
  scf_extended_system: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    compare: true, namespace: false, value: null, unstored: false, optional: false}
  numerical_p.xc_functional: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    compare: true, namespace: false, value: null, unstored: false, optional: false}
  numerical_p.cutoff_values: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    compare: true, namespace: false, value: null, unstored: false, optional: false}
  numerical_p.basis_sets: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    compare: true, namespace: false, value: null, unstored: false, optional: false}
  numerical_p.pseudo_file: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    optional: true, compare: false, namespace: false, value: null, unstored: false}
  numerical_p.basis_file: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
    optional: true, compare: false, namespace: false, value: null, unstored: false}
  cp2k.code: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true, compare: false,
    namespace: false, value: null, unstored: false, optional: false}
  cp2k.metadata: {validation: aim2dat.cp2k.find_scf_p, aiida_node: false, unstored: true,
    optional: true, compare: false, namespace: false, value: null}
  critic2.code: {validation: aim2dat.cp2k.partial_charges, aiida_node: true,
    optional: true, compare: false, namespace: false, value: null, unstored: false}
  critic2.metadata: {validation: aim2dat.cp2k.partial_charges, aiida_node: false,
    unstored: true, optional: true, compare: false, namespace: false, value: null}
  chargemol.code: {validation: aim2dat.cp2k.partial_charges, aiida_node: true,
    optional: true, namespace: false, value: null, unstored: false, compare: true}
  chargemol.metadata: {validation: aim2dat.cp2k.partial_charges, aiida_node: false,
    unstored: true, optional: true, compare: false, namespace: false, value: null}
  chargemol.path_atomic_densities: {validation: aim2dat.cp2k.partial_charges,
    aiida_node: true, dependency: chargemol.code, compare: false, namespace: false,
    value: null, unstored: false, optional: false}
  clean_workdir: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true, optional: true,
    compare: false, namespace: false, value: null, unstored: false}
general_input:
  cp2k.parameters:
    value:
      GLOBAL: *id001
      FORCE_EVAL: *id002
    aiida_node: true
    namespace: false
    unstored: false
    compare: true
    optional: false
  numerical_p.kpoints_ref_dist: {value: 0.15, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  factor_unocc_states: {value: 0.75, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  enable_roks: {value: false, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  scf_method: {value: density_mixing, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  adjust_scf_parameters: {value: true, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  always_add_unocc_states: {value: true, aiida_node: true, namespace: false, unstored: false,
    compare: true, optional: false}
  max_iterations: {value: 100, aiida_node: true, compare: false, namespace: false,
    unstored: false, optional: false}
  optimization_p.keep_space_group: {value: true, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  optimization_p.eps_symmetry: {value: 0.005, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
  optimization_p.ref_cell_scaling_factor: {value: 1.5, aiida_node: true, namespace: false,
    unstored: false, compare: true, optional: false}
Individual_input:
  seekpath_analysis:
    parameters:
      value: {reference_distance: 0.015, symprec: 0.005}
      aiida_node: true
      namespace: false
      unstored: false
      compare: true
      optional: false
      user_input: false
  find_scf_parameters: {}
  unit_cell_preopt:
    numerical_p.cutoff_values: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
      compare: false, namespace: false, value: null, unstored: false, optional: false,
      user_input: true}
    numerical_p.basis_sets: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
      compare: false, namespace: false, value: null, unstored: false, optional: false,
      user_input: true}
    numerical_p.pseudo_file: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
      optional: true, compare: false, namespace: false, value: null, unstored: false,
      user_input: true}
    numerical_p.basis_file: {validation: aim2dat.cp2k.find_scf_p, aiida_node: true,
      optional: true, compare: false, namespace: false, value: null, unstored: false,
      user_input: true}
    optimization_p.max_force: {value: 0.005, aiida_node: true, namespace: false, unstored: false,
      compare: true, optional: false, user_input: false}
    optimization_p.pressure_tolerance: {value: 200.0, aiida_node: true, namespace: false,
      unstored: false, compare: true, optional: false, user_input: false}
    numerical_p.kpoints_ref_dist: {value: 0.25, aiida_node: true, namespace: false,
      unstored: false, compare: true, optional: false, user_input: false}
  unit_cell_opt:
    optimization_p.max_force: {value: 9.7e-05, aiida_node: true, namespace: false,
      unstored: false, compare: true, optional: false, user_input: false}
    optimization_p.pressure_tolerance: {value: 100.0, aiida_node: true, namespace: false,
      unstored: false, compare: true, optional: false, user_input: false}
  band_structure: {}
  eigenvalues:
    numerical_p.kpoints_ref_dist: {value: 0.075, aiida_node: true, namespace: false,
      unstored: false, compare: true, optional: false, user_input: false}
  pdos:
    scf_method: {value: super_cell, aiida_node: True, namespace: False, unstored: false,
      compare: true, optional: false, user_input: false}
    minimum_cell_length: {value: 25.0, aiida_node: true, namespace: false, unstored: false,
      compare: true, optional: false, user_input: false}
    maximum_cell_length: {value: 40.0, aiida_node: true, namespace: false, unstored: false,
      compare: true, optional: false, user_input: false}
    resolve_atoms: {value: true, aiida_node: true, namespace: false, unstored: false,
      compare: true, optional: false, user_input: false}
  partial_charges:
    critic2.parameters:
      value: [crystal aiida-ELECTRON_DENSITY-1_0.cube, load aiida-ELECTRON_DENSITY-1_0.cube
          core zpsp, load aiida-ELECTRON_DENSITY-1_0.cube, integrable 2, yt]
      dependency: critic2.code
      aiida_node: true
      namespace: false
      unstored: false
      compare: true
      optional: false
      user_input: false
    chargemol.parameters:
      value:
        'periodicity along A, B, and C vectors': &id003 [true, true, true]
        charge type: DDEC6
      dependency: chargemol.code
      aiida_node: true
      namespace: false
      unstored: false
      compare: true
      optional: false
      user_input: false
tasks:
  seekpath_analysis:
    process: aim2dat.seekpath.structure_analysis
    parent_node: structure
    inputs: [parameters]
    dependencies: {}
    blacklist_inputs: []
  find_scf_parameters:
    process: aim2dat.cp2k.find_scf_p
    inputs: [scf_extended_system, numerical_p.xc_functional,
      numerical_p.cutoff_values, numerical_p.basis_sets, numerical_p.pseudo_file,
      numerical_p.basis_file, cp2k.code, cp2k.metadata, clean_workdir, cp2k.parameters, 
      numerical_p.kpoints_ref_dist, factor_unocc_states, enable_roks, scf_method,
      always_add_unocc_states, max_iterations]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      seekpath_analysis:
      - [primitive_structure, structural_p.structure]
  unit_cell_preopt:
    process: aim2dat.cp2k.cell_opt
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values,
      numerical_p.basis_sets, numerical_p.pseudo_file, numerical_p.basis_file, cp2k.code, 
      cp2k.metadata, clean_workdir, cp2k.parameters, factor_unocc_states, enable_roks, 
      scf_method, adjust_scf_parameters, always_add_unocc_states, max_iterations, 
      optimization_p.keep_space_group, optimization_p.eps_symmetry, 
      optimization_p.ref_cell_scaling_factor, optimization_p.max_force, optimization_p.pressure_tolerance, 
      numerical_p.kpoints_ref_dist]
    blacklist_inputs: [custom_scf_method, optimization_p.keep_angles, optimization_p.keep_symmetry]
    dependencies:
      seekpath_analysis:
      - [primitive_structure, structural_p.structure]
      find_scf_parameters:
      - [scf_parameters, structural_p.scf_parameters]
  unit_cell_opt:
    process: aim2dat.cp2k.cell_opt
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values,
      numerical_p.basis_sets, numerical_p.pseudo_file, numerical_p.basis_file, cp2k.code, 
      cp2k.metadata, clean_workdir, cp2k.parameters, numerical_p.kpoints_ref_dist, 
      factor_unocc_states, enable_roks, scf_method, adjust_scf_parameters, always_add_unocc_states, 
      max_iterations, optimization_p.keep_space_group, optimization_p.eps_symmetry, 
      optimization_p.ref_cell_scaling_factor, optimization_p.max_force, 
      optimization_p.pressure_tolerance]
    blacklist_inputs: [custom_scf_method, optimization_p.keep_angles, optimization_p.keep_symmetry]
    dependencies:
      unit_cell_preopt:
      - [cp2k.output_structure, structural_p.structure]
      - [scf_parameters, structural_p.scf_parameters]
  band_structure:
    process: aim2dat.cp2k.band_structure
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, 
      numerical_p.basis_sets, numerical_p.pseudo_file, numerical_p.basis_file, cp2k.code,
      cp2k.metadata, clean_workdir, cp2k.parameters, numerical_p.kpoints_ref_dist,
      factor_unocc_states, enable_roks, scf_method, adjust_scf_parameters, max_iterations]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      seekpath_analysis:
      - [parameters, path_parameters]
      unit_cell_opt:
      - [cp2k.output_structure, structural_p.structure]
      - [cp2k.remote_folder, cp2k.parent_calc_folder]
      - [scf_parameters, structural_p.scf_parameters]
  eigenvalues:
    process: aim2dat.cp2k.eigenvalues
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, 
      numerical_p.basis_sets, numerical_p.pseudo_file, numerical_p.basis_file, cp2k.code,
      cp2k.metadata, clean_workdir, cp2k.parameters, factor_unocc_states, enable_roks, 
      scf_method, adjust_scf_parameters, max_iterations, numerical_p.kpoints_ref_dist]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      unit_cell_opt:
      - [cp2k.output_structure, structural_p.structure]
      - [cp2k.remote_folder, cp2k.parent_calc_folder]
      - [scf_parameters, structural_p.scf_parameters]
  pdos:
    process: aim2dat.cp2k.pdos
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, 
      numerical_p.basis_sets, numerical_p.pseudo_file, numerical_p.basis_file, cp2k.code,
      cp2k.metadata, clean_workdir, cp2k.parameters, factor_unocc_states, enable_roks, 
      adjust_scf_parameters, max_iterations, scf_method, minimum_cell_length, 
      maximum_cell_length, resolve_atoms]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      unit_cell_opt:
      - [cp2k.output_structure, structural_p.structure]
  partial_charges:
    process: aim2dat.cp2k.partial_charges
    inputs: [scf_extended_system, numerical_p.xc_functional, numerical_p.cutoff_values, 
      numerical_p.basis_sets, numerical_p.pseudo_file, numerical_p.basis_file, cp2k.code,
      cp2k.metadata, critic2.code, critic2.metadata, chargemol.code, chargemol.metadata, 
      chargemol.path_atomic_densities, clean_workdir, cp2k.parameters, numerical_p.kpoints_ref_dist,
      factor_unocc_states, enable_roks, scf_method, adjust_scf_parameters, always_add_unocc_states, 
      max_iterations, critic2.parameters, chargemol.parameters]
    blacklist_inputs: [custom_scf_method]
    dependencies:
      unit_cell_opt:
      - [cp2k.output_structure, structural_p.structure]
      - [cp2k.remote_folder, cp2k.parent_calc_folder]
      - [scf_parameters, structural_p.scf_parameters]
result_dict:
  seekpath_analysis: [primitive_structure, conventional_structure]
  find_scf_parameters: [scf_method_level, scf_parameter_level, scf_smearing_level]
  unit_cell_preopt: []
  unit_cell_opt: [optimized_structure, total_energy, space_group]
  band_structure: [band_structure]
  eigenvalues: []
  pdos: [pdos]
  partial_charges: [bader_populations, ddec6_populations, hirshfeld_populations, mulliken_populations]
