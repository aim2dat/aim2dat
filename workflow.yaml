%YAML 1.2
---
protocol:
  title: arithmetic-testing
  version: '1.1'
  description: Test workflow using the arithmetic calcjobs/work chains from
    aiida-core.
  dependencies:
  - [aiida-core, '2.0', null]
  parent_node_type: float
  parent_node_input: {task_1.1: x, task_1.2: x, task_1.3: z, task_2.2: x}
  tasks:
    task_1.1: {process: core.arithmetic.add_multiply}
    task_1.2: {process: core.arithmetic.add_multiply}
    task_1.3: {process: core.arithmetic.add_multiply}
    task_2.1:
      process: core.arithmetic.add_multiply
      dependencies:
        task_1.2:
        - [result, x]
        task_1.3:
        - [result, z]
    task_2.2:
      process: core.arithmetic.add_multiply
      dependencies:
        task_1.3:
        - [result, y]
    task_3.1:
      process: core.arithmetic.add_multiply
      dependencies:
        task_1.1:
        - [result, x]
        task_2.1:
        - [result, y]
        task_2.2:
        - [result, z]
    task_4.1:
      process: core.arithmetic.add_multiply
      dependencies:
        task_3.1:
        - [result, x]
        task_1.2:
        - [result, z]
  general_input:
    z:
      value: 2.0
      aiida_node: true
      tasks: [task_1.1, task_2.2]
    z->task_1.2: {value: 4.0, aiida_node: true}
    x->task_1.3: {value: 10.0, aiida_node: true}
  user_input:
    y:
      validation:
      aiida_node: true
      compare: true
      tasks: [task_1.1, task_1.2, task_1.3, task_2.1]
    y->task_4.1: {validation: null, aiida_node: true, compare: true}
  results:
    res_1: {task: task_4.1, output_port: result, unit: test_unit}
    res_2: {task: task_1.3, output_port: result, unit: test_unit}
general_input: {z: bc60954f-27d5-41fb-aa92-c723f4bf6d7b, z->task_1.2:
    abbe39fd-7e9a-49e3-b7a3-9a3713ff83f5}
user_input_nodes: {y: f434a39e-b862-4973-accd-db0400f419e0, y->task_4.1:
    db04fdce-a0d4-49b7-9dea-f6e331373757}
user_input: {}
parent_node: f4d6f1db-a0bb-4cf5-8d0a-0016060fc7fc
